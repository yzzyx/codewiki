#!/bin/sh

if [ -z "$CC" ]; then
	CC="gcc"
fi

checkHeader()
{
	CONFIG_FLAG=$1
	HEADER=$2
	TMP=`tempfile --suffix .c`
	echo -n "Checking for $HEADER "
	cat > $TMP << EOF
#include <$HEADER>
int main(int argc, char *argv[]){ return 1;}
EOF

	$CC -o $TMP.o -c $TMP > /dev/null 2>&1
	if [ $? -eq 0 ]; then
		echo "[yes]"
		echo "#define $CONFIG_FLAG 1" >> config.h
		return 1
	else
		echo "[no]"
		echo "#define $CONFIG_FLAG 0" >> config.h
		return 0
	fi

	rm $TMP
}

checkFunction()
{
	CONFIG_FLAG=$1
	HEADER=$2
	FUNCTION=$3
	TMP=`tempfile --suffix .c`
	echo -n "Checking for function $FUNCTION in $HEADER "
	cat > $TMP << EOF
#include <$HEADER>
int main(int argc, char *argv[]){ void(*t)() = (void(*)())$FUNCTION; return 1;}
EOF

	$CC -o $TMP.o -c $TMP > /dev/null 2>&1
	if [ $? -eq 0 ]; then
		echo "[yes]"
		echo "#define $CONFIG_FLAG 1" >> config.h
		return 1
	else
		echo "[no]"
		echo "#define $CONFIG_FLAG 0" >> config.h
		return 0
	fi

	rm $TMP
}

echo "" > config.h
checkHeader HAVE_FCGI_H		"fcgi_stdio.h"
checkHeader HAVE_QUEUE_H	"queue.h"
checkHeader HAVE_SYS_QUEUE_H	"sys/queue.h"
checkHeader HAVE_BSD_SYS_QUEUE_H	"bsd/sys/queue.h"
checkHeader HAVE_BSD_QUEUE_H	"bsd/queue.h"
checkHeader HAVE_TREE_H		"sys/tree.h"
checkHeader HAVE_BSD_TREE_H	"bsd/sys/tree.h"
checkHeader HAVE_CRYPT_H	"crypt.h"
checkHeader HAVE_UTIL_H		"util.h" ; UTIL_H=$?

echo "" > .Make.config
if [ "$UTIL_H" -eq 0 ]; then
	echo "OBJS+=extra/util.o" >> .Make.config
fi

#TODO -> fix Makefile, only try to compile the versions we can actually
# build
